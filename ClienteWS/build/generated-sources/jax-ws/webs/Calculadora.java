
package webs;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Calculadora", targetNamespace = "http://webs/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculadora {


    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplicar", targetNamespace = "http://webs/", className = "webs.Multiplicar")
    @ResponseWrapper(localName = "multiplicarResponse", targetNamespace = "http://webs/", className = "webs.MultiplicarResponse")
    @Action(input = "http://webs/Calculadora/multiplicarRequest", output = "http://webs/Calculadora/multiplicarResponse")
    public Double multiplicar(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subtrair", targetNamespace = "http://webs/", className = "webs.Subtrair")
    @ResponseWrapper(localName = "subtrairResponse", targetNamespace = "http://webs/", className = "webs.SubtrairResponse")
    @Action(input = "http://webs/Calculadora/subtrairRequest", output = "http://webs/Calculadora/subtrairResponse")
    public Double subtrair(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dividir", targetNamespace = "http://webs/", className = "webs.Dividir")
    @ResponseWrapper(localName = "dividirResponse", targetNamespace = "http://webs/", className = "webs.DividirResponse")
    @Action(input = "http://webs/Calculadora/dividirRequest", output = "http://webs/Calculadora/dividirResponse")
    public Double dividir(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "somar", targetNamespace = "http://webs/", className = "webs.Somar")
    @ResponseWrapper(localName = "somarResponse", targetNamespace = "http://webs/", className = "webs.SomarResponse")
    @Action(input = "http://webs/Calculadora/somarRequest", output = "http://webs/Calculadora/somarResponse")
    public Double somar(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

}
